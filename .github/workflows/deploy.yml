# Since Github actions is not good at previewing a 'test merge' at all,
# we use CircleCi for that. This worflow is only meant to run when 
# merge to actual dev and prod branches happen.
# why operate on two different platforms? CircleCI can do the job,
# and it offers limited free credits every week. To save those,
# all other actions that can be run on Github should be run through Github Actions.

name: deploy
on:
  push:
    branches:
      - dev
      - prod
jobs: 
  deploy-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: deploy app to surge for dev or prod merge commit
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
          YOUTUBE_API_KEY_FOR_DEPLOY_DEV: ${{ secrets.YOUTUBE_API_KEY_FOR_DEPLOY_DEV }}
          YOUTUBE_API_KEY_FOR_PROD: ${{ secrets.YOUTUBE_API_KEY_FOR_PROD }}
        run: |
          sudo npm i -g npm@7
          npm i
          npm run bootstrap
          # https://stackoverflow.com/questions/58033366/how-to-get-current-branch-within-github-actions
          if [ "${GITHUB_REF##*/}" = "prod" ]; then
            echo "YOUTUBE_API_KEY=${YOUTUBE_API_KEY_FOR_PROD}" >> .env
            npm run app:prod
          elif [ "${GITHUB_REF##*/}" = "dev" ]; then
            echo "YOUTUBE_API_KEY=${YOUTUBE_API_KEY_FOR_DEPLOY_DEV}" >> .env
            npm run app:deploydev
          else
            echo "${GITHUB_REF##*/} is not recognized. It should be dev or prod"
          fi
          # https://stackoverflow.com/questions/44491184/react-router-does-not-work-in-production-and-surge-deployments
          cp ./packages/app/dist/index.html ./packages/app/dist/200.html

          # https://stackoverflow.com/questions/58033366/how-to-get-current-branch-within-github-actions
          if [ "${GITHUB_REF##*/}" = "prod" ]; then
            npx surge ./packages/app/dist "ytlite.surge.sh" --token $SURGE_TOKEN
          elif [ "${GITHUB_REF##*/}" = "dev" ]; then
            npx surge ./packages/app/dist "ytlite-dev.surge.sh" --token $SURGE_TOKEN
          else
            echo "${GITHUB_REF##*/} is not recognized. It should be dev or prod"
          fi
  # todo: make custom github action. not doing now because i'm feeling too lazy. it just works now
  deploy-storybook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: deploy storybook to surge for dev or prod merge commit
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        run: |
          sudo npm i -g npm@7
          npm i
          npm run bootstrap
          npm run app:build-storybook

          if [ "${GITHUB_REF##*/}" = "prod" ]; then
            npx surge ./packages/app/dist "ytlitesb.surge.sh" --token $SURGE_TOKEN
          elif [ "${GITHUB_REF##*/}" = "dev" ]; then
            npx surge ./packages/app/storybook-static "ytlitesb-dev.surge.sh" --token $SURGE_TOKEN
          else
            echo "${GITHUB_REF##*/} is not recognized. It should be dev or prod"
          fi
